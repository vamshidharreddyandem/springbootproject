spring.application.name=memory-stack-service
#server.port=9099

eureka.client.fetchRegistry= true

#configuring port  
server.port=5000

logging.file.name = ./logs/userMgmt.log

#spring.datasource.url=jdbc:postgresql://localhost:5432/stack?currentSchema=public
#spring.datasource.platform=postgres
#spring.datasource.username=postgres
#spring.datasource.password=root
#spring.datasource.driver-class-name=org.postgresql.Driver
# Hibernate additional native properties to set on the JPA provider.
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

#Local Configuration 

spring.datasource.url = jdbc:mysql://localhost/stack?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
spring.datasource.username = root
spring.datasource.password = Vamshi-1996

#AWS Configuration 
#spring.datasource.url = jdbc:mysql://dbstack.cd1t90py7x6j.us-east-2.rds.amazonaws.com:3306/stack
#spring.datasource.username = root
#spring.datasource.password = password

spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

spring.jpa.hibernate.ddl-auto = update

## Hibernate Logging
logging.level.org.hibernate.SQL= DEBUG

spring.main.allow-bean-definition-overriding=true



# Initialize the datasource with available DDL and DML scripts
spring.datasource.initialization-mode=always

## Jackson Properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
spring.jackson.time-zone= UTC

## App Properties
app.jwtSecret= JWTSuperSecretKey
app.jwtExpirationInMs = 604800000
management.security.enabled = false
##management.port = 9000
## Spring Profiles
# spring.profiles.active=prod


#Hikari Database connection pool settings
#maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.enabled=false
spring.datasource.hikari.connection-timeout = 20000 

#TODO: Following settings are for dev mode. For prod, the no. of connections should be higher and all hikari
#settings need to be revisited. 
#minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle= 1 
#maximum pool size
spring.datasource.hikari.maximum-pool-size= 5 
#maximum lifetime of a connection after which Hikari connection pooler should close a connection. Default value of 
# this is 30 minutes which might be too long if the DBMS's idle connection timeout is shorter. Hence setting this to 10 minutes. 
#Hikari closes connections that have been idle for the amount specified by idle-timeout and the no. of them is greater than
#minimum-idle. 
spring.datasource.hikari.max-lifetime= 600000  
spring.datasource.hikari.idle-timeout= 120000



######Email Properties ######
spring.mail.transport.protocol=smtp
spring.mail.from.email=inform.prudhvi@gmail.com
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.username=inform.prudhvi@gmail.com
spring.mail.password=Mrlambo*0208
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000


password.regex.pattern=^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{8,20}$
spring.mail.forgotpassword.link=http://localhost:9099/forgot-password?token=
@spring.template.forgot.path=/src/main/resources/forgotpasswordbuildemail.vm
spring.mail.registration.link=http://localhost:9099/confirm-register?token=
email.regex.pattern=^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$
spring.template.path=/src/main/resources/buildemail.vm